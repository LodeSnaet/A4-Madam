{% extends '_shared/_layout.twig' %}

{% block main %}

  <section class="c-shop container">
    <div class="row">
      <div class="col-12 col-lg-9 offset-lg-3 mb-5">
        <div class="c-shop__order">
          {% set title = "Delvaux# Collection" %}
          {% set parts = title|split('#')|filter(v => v|trim is not empty) %}

          {% include '_components/_subtitle.twig' with {
            title: parts[0] ?? '',
            description: parts[1] ?? '',
            additionalClasses: 'c-shop__title'
          } %}

          {% set rawOrder = craft.app.request.getQueryParam('order') ?? '' %}

          {% include '_components/sortby.twig' with { rawOrder: rawOrder } %}
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-12 col-lg-3">
        <div class="c-shop__filters">
          {% set currentProductType = craft.app.request.getQueryParam('productType') %}
          {% set baseUrl = craft.app.request.getPathInfo() %}

          <div class="c-shop__categories">
            <h3 class="u-italic">Category</h3>
            <div class="c-shop__btns">
              {% set queryParams = craft.app.request.getQueryParams() %}
              {% set currentOrder = queryParams.order ?? null %}

              {% for productType in craft.commerce.productTypes.allProductTypes %}
                {% set isActive = (productType.handle == currentProductType) %}

                {% set baseParams = isActive
                  ? {}
                  : { productType: productType.handle } %}

                {# Include order param only if it exists #}
                {% if currentOrder %}
                  {% set baseParams = baseParams | merge({ order: currentOrder }) %}
                {% endif %}

                <a href="{{ url(baseUrl, baseParams) }}"
                   class="c-btn {{ isActive ? 'c-btn--active' }}">
                  {{ productType.name }}
                </a>
              {% endfor %}

            </div>
          </div>

          <div class="c-shop__filtertypes">
            <h3 class="u-italic">Filter</h3>

            {% set allCategories = craft.categories.all() %}
            {% set dropdownData = [] %}

            {% for groupName, categoriesInGroup in allCategories|group('group.name') %}
              {% set dropdownData = dropdownData|merge([{
                title: groupName,
                filters: categoriesInGroup
              }]) %}
            {% endfor %}

            <div class="c-shop__dropdowns">
              {% for dropdown in dropdownData %}
                {% include '_components/dropdown.twig' with dropdown %}
              {% endfor %}
            </div>

          </div>
        </div>
      </div>

      <div class="col-12 col-lg-9">
        <div class="o-grid">

          {% set orderMap = {
            'title-asc': 'title ASC',
            'title-desc': 'title DESC',
            'default-price-asc': 'defaultPrice ASC',
            'default-price-desc': 'defaultPrice DESC',
            'post-date-asc': 'postDate ASC',
            'post-date-desc': 'postDate DESC'
          } %}

          {% set order = orderMap[rawOrder] ?? orderMap['title-asc'] %}




          {% set productsQuery = craft.products %}
          {% set filterGroups = craft.app.categories.getAllGroups() %}

          {# Check for the productType parameter first #}
          {% set productTypeHandle = craft.app.request.getQueryParam('productType') %}

          {% if productTypeHandle is not empty %}
            {# If productType is set, filter the query to only include that product type #}
            {% do productsQuery.type(productTypeHandle) %}
          {% endif %}

          {# Loop through other category filters, applying them on top of the productType filter #}
          {% for filterGroup in filterGroups %}
            {% set groupHandle = filterGroup.handle %}
            {% set groupValues = craft.app.request.getQueryParam(groupHandle) %}

            {% if groupValues is not empty %}
              {% set categories = craft.categories().group(groupHandle).slug(groupValues).all() %}
              {% do productsQuery.andRelatedTo(categories) %}
            {% endif %}
          {% endfor %}

          {# Execute the final query #}
          {% set products = productsQuery.orderBy(order).all() %}

          {# Loop through the filtered products and include the product card component #}
          {% for product in products %}
            {% include '_components/_productcard' with { product: product } %}
          {% endfor %}

        </div>
      </div>

    </div>
    </div>
  </section>

  {% for section in entry.newSection %}
    {% if section.type.handle == 'blogPosts' %}
      {% include '_sections/blog.twig' with section %}
    {% elseif section.type.handle == 'newProducts' %}
      {% include '_sections/newproducts.twig' with section %}
    {% elseif section.type.handle == 'review' %}
      {% include '_sections/review.twig' with section %}
    {% elseif section.type.handle == 'email' %}
      {% include '_sections/email.twig' with section %}
    {% elseif section.type.handle == 'featuredCollection' %}
      {% include '_sections/featured.twig' with section %}
    {% endif %}
  {% endfor %}

{% endblock %}

